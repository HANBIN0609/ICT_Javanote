21.08.31
hardware : cpu
Operating System(OS) : 응용 프로그램을 실행시키기 위한 바탕

21.09.01
프로그램은 하나의 OS용으로 짰으면 그 외의 OS에서는 작동하지 않는다.
- ex) Windows 10용 엑셀은 Linux에서 쓸 수 없다.

Java : 제임스 고슬링이 만든 프로그래밍 언어(32bit 시스템)

각 OS용 JVM(Java Virtual Machine)은 따로 있지만 Java언어는 같이 쓰기 때문에 OS별로 여러번 개발할 필요가 없다. 

컴파일(Compile) : 소스코드를 바이트코드(CPU가 알아들을 수 있는 이진수)로 만들어주는 과정(.class)

.class라는 CPU가 알아듣는 파일이 생성되었고, 이를 실행시켜야 하는데, 진짜 실행은 어떤식으로???
>>>메모리로 0101덩어리가 넘어갔다가 메모리에서 CPU로 정보가 처리됨. 하드에서 CPU로 바로 넘어가는 것이 아님.(32bit는 32갈래로, 64bit는 64갈래로.)

** 32bit, 64bit시스템??? >>> CPU랑 메모리가 각각 32개, 64개의 선으로 이어져있음.

메모리에는 주소가 있다.
int(정수)의 범위 : 21억... 죽을때 죽더라도 21억 통장에 찍고죽자...

* 음의 정수를 표현할 때 
- 보수법? 대응하는 수를 반대로 쓰는것 >>> ex) 이진수 1011 > 0100
- 정수는 할당 용량이 8비트이기때문에 마지막 올림수1은 버려서 양수와 음수의 합은 0이 됨
- 정수표현 사진참고 >>>210901_음수표현법

실수(float, double)의 특징
- 실수의 범위는 무한함. 그러나 메모리에 담아낼 수 있는 값은 유한함.
- 컴퓨터가 표현할 수 있는 값(듬성듬성) 중에서 가장 오차가 적은 근사값을 출력함.
- 실수는 무조건 double을 쓰도록,,,, 

***short형 변수와 byte형 변수는 연산을 시킬 때 무조건 int로 연산을 시킨다. 
>>> 각각 16bit와 8bit 이지만 java는 32bit로 되어있어서 그에 맞는 더 큰 단위인 int로 바뀌어서 연산이 되어버림. 그래서 더 커져버린 단위로 인해 short의 용량이 담아낼 수 없기 때문에 연산을 할 때 오류가 생김.
>>> 에러코드 : Type mismatch: cannot convert from int to byte >>> 변수지정은 byte로 했지만 연산할 때 int로 되어버림. 더 작은 단위의 변수로 넣을 수 없기 때문에 오류발생. short도 마찬가지.