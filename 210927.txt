★★★★★★★★★★클래스의 상속 2 : 오버라이딩★★★★★★★★★★
상속 관계에 놓은 두 대상의 관찰
 - 상속의 특성 
	- 하위 클래스는 상위 클래스의 모든 특성을 지닌다.
	- 거기에 더하여 하위 클래스는 자신만의 추가적인 특성을 더하게 된다.(IS-A 관계)
	- IS-A 관계 : this is a~ 로 표현할 수 있는 관계
	- HAS-A 관계 : It has a~ 로 표현할 수 있는 관계, 애매하다 싶으면 무조건 이 관계.

 - 메소드 오버로딩 vs. 메소드 오버라이딩
  - 메소드 오버로딩 :  파라미터 갯수와 타입을 달리해서 같은 이름으로 여러개의 메소드를 만듬
  - 메소드 오버라이딩 : 상속 관계에서 같은 데이터타입의 같은 이름을 가진, body(구현된 내용)만 다른 함수를 만들어서 사용하는 것.
  - 오버라이딩은 자식꺼!(부모의 데이터타입으로 선언해도 오버라이딩된 자식 데이터를 불러옴.)
 - 다형성(Polymorphism) : 형(데이터 타입)이 많다. 즉, 상속받은 모든 형들을 부모형이 받을 수 있다.
class A{
	public void printA(){
		System.out.println("A");
	}	
}

class B extends A{
	public void printB(){
		System.out.println("B");
	}	
}

class Test{
	public static void main(String[] args){
		A a = new B();
		a.printA();
		a.printB(); // 불가능
	}
}
>>>>> 데이터타입 A에서 메모리에 올라가 있는 내용은 a.printA(); 밖에 없기 때문에 a.printB(); 는 사용 불가.

class Test{
	public static void main(String[] args){
		B b1 = new B();
		A b2 = b1; // 가능 

		A b3 = new B();
		B b4 = b3; // 불가능
	}
} 
>>>>> 메모리에 올라가 있는 내용이 A의 것까지밖에 없음. B가 가진 데이터 모두가 있지 않기 때문에 불가능.

